VERSION 2
NODE aggregate_globally
SQL >

    %
        SELECT
            'global' as regionId,
            count() AS count,
            count(error) AS errors,
            quantileTiming(0.75)(latency) AS p75,
            quantileTiming(0.90)(latency) AS p90,
            quantileTiming(0.95)(latency) AS p95,
            quantileTiming(0.99)(latency) AS p99
        FROM checks
        WHERE
            endpointId ={{ String(endpointId, required=True) }}
        AND 
            time >= now() - INTERVAL {{ Int8(days, default=1)}} DAY
        GROUP BY regionId



NODE aggregate_per_region
SQL >

    %
        SELECT
            regionId,
            count() AS count,
            count(error) AS errors,
            quantileTiming(0.75)(latency) AS p75,
            quantileTiming(0.90)(latency) AS p90,
            quantileTiming(0.95)(latency) AS p95,
            quantileTiming(0.99)(latency) AS p99
        FROM checks
        WHERE
            endpointId ={{ String(endpointId, required=True) }}
        AND 
            time >= now() - INTERVAL {{ Int8(days, default=1)}} DAY
        GROUP BY regionId



NODE combine
SQL >

    SELECT * FROM aggregate_per_region UNION ALL SELECT  * FROM aggregate_globally


