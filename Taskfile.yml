version: '3'


vars: 
  VERSION: 
    sh: git describe --tags --always
  CHECK_RUNNER_IMAGE: chronark/planetfall-check-runner
  SCHEDULER_IMAGE: chronark/planetfall-scheduler

tasks:
  clear:
    cmds:
      - rm -rf ./**/node_modules
      - rm -rf ./**/dist
      - rm -rf ./**/.next
      - rm -rf ./**/.turbo
  install:
    deps: 
      - clear
    cmds:
      - pnpm install
  build:
    deps:
      - install
    cmds:
      - pnpm build
  
  deploy:
    deps:
      - build
    env:
          TF_VAR_check_runner_image: "{{.CHECK_RUNNER_IMAGE}}:{{.VERSION}}"
    cmds:
      - task: build-fly-check-runner
      - task: build-aws-check-runner
       
      - terraform -chdir=deployment init -upgrade
      - terraform -chdir=deployment apply -var-file=".tfvars" -auto-approve

      - task: deploy-api 
       
  build-scheduler:
    cmds:
      - docker build --platform=linux/amd64 -t {{.SCHEDULER_IMAGE}}:{{.VERSION}} -t {{.SCHEDULER_IMAGE}}:latest -f ./apps/scheduler/Dockerfile .

  build-aws-check-runner:
    env:
      GOARCH: amd64
      GOOS: linux 
    cmds:
      - go build -o apps/proxy/dist/cmd/aws/main apps/proxy/cmd/aws/main.go
  
  build-fly-check-runner:
    cmds:
      - docker build --platform=linux/amd64 -t {{.CHECK_RUNNER_IMAGE}}:{{.VERSION}} -t {{.CHECK_RUNNER_IMAGE}}:latest -f ./apps/proxy/Dockerfile .
      - docker push {{.CHECK_RUNNER_IMAGE}}:{{.VERSION}}
      - docker push {{.CHECK_RUNNER_IMAGE}}:latest
    
  build-api:
    deps:
      - install
    cmds:
      - pnpm turbo run build --filter=api

  deploy-api:
    deps:
      - build-api
    cmds:
      - pnpm --dir=apps/api ship